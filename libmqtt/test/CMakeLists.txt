cmake_minimum_required (VERSION 3.0)
project(testmqtt)

SET(GCC_COVERAGE_COMPILE_FLAGS "-std=gnu99 -Wall -Wno-unused -g")
SET(GCC_INCLUDE_PATH "-I../ ")
SET(CMAKE_C_FLAGS "${GCC_INCLUDE_PATH} ${GCC_COVERAGE_COMPILE_FLAGS}")
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../../b64)

option(WITH_THREADING "Include client library threading support?" ON)
if (DEFINED ${WITH_THREADING} AND ${WITH_THREADING} STREQUAL ON)
        add_definitions("-DWITH_THREADING")
        if (WIN32)
                set (PTHREAD_LIBRARIES C:\\pthreads\\Pre-built.2\\lib\\x86\\pthreadVC2.lib)
                set (PTHREAD_INCLUDE_DIR C:\\pthreads\\Pre-built.2\\include)
        else (WIN32)
                set (PTHREAD_LIBRARIES pthread)
                set (PTHREAD_INCLUDE_DIR "")
        endif (WIN32)
else()
        set (PTHREAD_LIBRARIES "")
        set (PTHREAD_INCLUDE_DIR "")
endif()

link_directories(${CMAKE_CURRENT_SOURCE_DIR}/..)

aux_source_directory(. LIB_MOSQUITTO_TEST)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/../../b64 B64_SOURCE_LIST)
add_executable(mqtt_test-${HOST} ${LIB_MOSQUITTO_TEST} ${B64_SOURCE_LIST})

if (DEFINED $ENV{WITH_MOSQUITTO} AND $ENV{WITH_MOSQUITTO} STREQUAL "ON")
	if (DEFINED ${WITH_TLS} AND ${WITH_TLS} STREQUAL ON)
	 target_link_libraries(mqtt_test-${HOST} mqtt pthread libcrypto.so libssl.so)
        else()
	 target_link_libraries(mqtt_test-${HOST} mqtt pthread)
        endif()
else()
	if (DEFINED ${WITH_TLS} AND ${WITH_TLS} STREQUAL ON)
	 target_link_libraries(mqtt_test-${HOST} mqtt pthread libwolfmqtt.a libwolfssl.a m)
        else()
	 target_link_libraries(mqtt_test-${HOST} mqtt pthread libwolfmqtt.a libwolfssl.a m)
        endif()
endif()

