!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADTS	sim_dev.c	/^typedef struct ADTS{$/;"	s	file:
ADTS	sim_dev.c	/^}ADTS;$/;"	t	typeref:struct:ADTS	file:
ALARM_JPEG_CAPTURED	dev_core.h	/^    ALARM_JPEG_CAPTURED$/;"	e	enum:__anon14
ALARM_MOTION_DETECT	dev_core.h	/^    ALARM_MOTION_DETECT,$/;"	e	enum:__anon14
ALARM_MOTION_DETECT_DISAPPEAR	dev_core.h	/^    ALARM_MOTION_DETECT_DISAPPEAR,$/;"	e	enum:__anon14
ARRSZ	cfg.h	/^#define ARRSZ(/;"	d
ARRSZ	socket_logging.c	/^#define ARRSZ(/;"	d	file:
AUDIO_AAC	dev_core.h	/^    AUDIO_AAC,$/;"	e	enum:__anon16
AUDIO_G711	dev_core.h	/^    AUDIO_G711$/;"	e	enum:__anon16
AUDIO_TYPE_AAC	sim_dev.c	/^    AUDIO_TYPE_AAC$/;"	e	enum:__anon8	file:
AUDIO_TYPE_G711	sim_dev.c	/^    AUDIO_TYPE_G711,$/;"	e	enum:__anon8	file:
AjAlarmCallback	aj_dev.c	/^int AjAlarmCallback(ALARM_ENTRY _alarm, void *pcontext)$/;"	f
AjAudioGetFrameCb	aj_dev.c	/^static int AjAudioGetFrameCb( char *_pFrame, int _nLen, double _dTimeStamp,$/;"	f	file:
AjCaptureJpeg	aj_dev.c	/^static int AjCaptureJpeg( int stream, int quality, char *path, char *filename)$/;"	f	file:
AjDeInitIPC	aj_dev.c	/^static int AjDeInitIPC()$/;"	f	file:
AjGetDevId	aj_dev.c	/^static int AjGetDevId( char *devId )$/;"	f	file:
AjInitIPC	aj_dev.c	/^static int AjInitIPC( int audioType, int subStreamEnable, VideoFrameCb videoCb, AudioFrameCb audioCb )$/;"	f	file:
AjIsAudioEnable	aj_dev.c	/^static int AjIsAudioEnable()$/;"	f	file:
AjRegisterAlarmCb	aj_dev.c	/^static int AjRegisterAlarmCb( int (*alarmCallback)(int alarm, void *data ) )$/;"	f	file:
AjStartStream	aj_dev.c	/^int AjStartStream()$/;"	f
AjVideoGetFrameCb	aj_dev.c	/^static int AjVideoGetFrameCb( int streamno, char *_pFrame,$/;"	f	file:
AlarmCallback	main.c	/^int AlarmCallback( int alarm, void *data )$/;"	f
AlarmCode	dev_core.h	/^} AlarmCode;$/;"	t	typeref:enum:__anon14
AlarmTask	sim_dev.c	/^void *AlarmTask( void *arg )$/;"	f
App	main.h	/^} App;$/;"	t	typeref:struct:__anon6
AudioCaptureTask	sim_dev.c	/^void *AudioCaptureTask( void *param )$/;"	f
AudioFrameCb	dev_core.h	/^typedef int ( *AudioFrameCb)( char *_pFrame, int _nLen, double _dTimeStamp,$/;"	t
AudioGetFrameCb	stream.c	/^int AudioGetFrameCb( char *_pFrame, int _nLen, double _dTimeStamp,$/;"	f
AudioType	dev_core.h	/^} AudioType;$/;"	t	typeref:enum:__anon16
BASIC	socket_logging.c	/^#define BASIC(/;"	d	file:
BLACK	dbg.h	/^#define BLACK /;"	d
BLINK	dbg.h	/^#define BLINK /;"	d
BLUE	dbg.h	/^#define BLUE /;"	d
BOLD	dbg.h	/^#define BOLD /;"	d
BROWN	dbg.h	/^#define BROWN /;"	d
BUFFER_SIZE	dbg.h	/^#define BUFFER_SIZE /;"	d
CFG_MAX_LINE	cfg.h	/^#define CFG_MAX_LINE /;"	d
CFG_MEMBER	cfg.h	/^#define CFG_MEMBER(/;"	d
CFG_STRUCT_H_	cfg.h	/^#define CFG_STRUCT_H_$/;"	d
CLEAR	dbg.h	/^#define CLEAR /;"	d
CLRLINE	dbg.h	/^#define CLRLINE /;"	d
CYAN	dbg.h	/^#define CYAN /;"	d
CacheHandle	stream.c	/^int CacheHandle( Queue *pQueue, LinkTsMuxUploader *pUploader,$/;"	f
Camera	sim_dev.c	/^}Camera;$/;"	t	typeref:struct:__anon11	file:
CaptureDevDeinit	main.c	/^static int CaptureDevDeinit()$/;"	f	file:
CaptureDevInit	main.c	/^static int CaptureDevInit( )$/;"	f	file:
CaptureDevStartStream	main.c	/^int CaptureDevStartStream()$/;"	f
CaptureDevice	dev_core.h	/^} CaptureDevice;$/;"	t	typeref:struct:__anon17
CfgGetIntItem	cfg.c	/^void CfgGetIntItem( char *item, int *out )$/;"	f
CfgGetItem	cfg.c	/^void CfgGetItem()$/;"	f
CfgGetStrItem	cfg.c	/^void CfgGetStrItem( char *item, char **out )$/;"	f
CfgItem	cfg.h	/^} CfgItem;$/;"	t	typeref:struct:__anon19
CfgSaveItem	cfg.c	/^int  CfgSaveItem( char *value, char **dest )$/;"	f
CmdHandleGetVersion	socket_logging.c	/^void CmdHandleGetVersion( char *param )$/;"	f
CmdHandleMovingDetection	socket_logging.c	/^void CmdHandleMovingDetection( char *param )$/;"	f
CmdHnadleCache	socket_logging.c	/^void CmdHnadleCache( char *param )$/;"	f
CmdHnadleDump	socket_logging.c	/^void CmdHnadleDump( char *param )$/;"	f
CmdHnadleHelp	socket_logging.c	/^void CmdHnadleHelp( char *param )$/;"	f
CmdHnadleLogStart	socket_logging.c	/^void CmdHnadleLogStart( char *param )$/;"	f
CmdHnadleLogStop	socket_logging.c	/^void CmdHnadleLogStop( char *param )$/;"	f
CmdHnadleOutput	socket_logging.c	/^void CmdHnadleOutput( char *param )$/;"	f
CmdHnadleUpdateFrom	socket_logging.c	/^void CmdHnadleUpdateFrom( char *param )$/;"	f
Config	cfg.h	/^} Config;$/;"	t	typeref:struct:__anon20
ConfigUpdateTask	main.c	/^void *ConfigUpdateTask( void *param )$/;"	f
CoreDevice	dev_core.h	/^} CoreDevice;$/;"	t	typeref:struct:__anon18
CoreDeviceCaptureJpeg	dev_core.c	/^int CoreDeviceCaptureJpeg( int stream, int quality, char *path, char *filename)$/;"	f
CoreDeviceDeInit	dev_core.c	/^int CoreDeviceDeInit()$/;"	f
CoreDeviceGetDevId	dev_core.c	/^int CoreDeviceGetDevId( char *devId )$/;"	f
CoreDeviceInit	dev_core.c	/^int CoreDeviceInit( int audioType, int subStreamEnable, VideoFrameCb videoCb, AudioFrameCb audioCb )$/;"	f
CoreDeviceIsAudioEnable	dev_core.c	/^int CoreDeviceIsAudioEnable()$/;"	f
CoreDeviceRegisterAlarmCb	dev_core.c	/^int CoreDeviceRegisterAlarmCb( int (*alarmCb)( int alarm, void *data ) )$/;"	f
CoreDeviceStartStream	dev_core.c	/^int CoreDeviceStartStream( int streamType )$/;"	f
DBG_ERROR	dbg.h	/^#define DBG_ERROR(/;"	d
DBG_H	dbg.h	/^#define DBG_H$/;"	d
DBG_LEVEL_DEBUG	dbg.h	/^    DBG_LEVEL_DEBUG,$/;"	e	enum:__anon22
DBG_LEVEL_FATAL	dbg.h	/^    DBG_LEVEL_FATAL,$/;"	e	enum:__anon22
DBG_LOG	dbg.h	/^#define DBG_LOG(/;"	d
DEV_CORE_CAPTURE_DEVICE_ENTRY	dev_core.c	/^#define DEV_CORE_CAPTURE_DEVICE_ENTRY(/;"	d	file:
DEV_CORE_CAPTURE_DEVICE_ENTRY	dev_core.c	/^#undef DEV_CORE_CAPTURE_DEVICE_ENTRY$/;"	d	file:
DEV_CORE_H	dev_core.h	/^#define DEV_CORE_H$/;"	d
DEV_ID_LEN	main.h	/^#define DEV_ID_LEN /;"	d
DataCallback	sim_dev.c	/^typedef int (*DataCallback)(void *opaque, void *pData, int nDataLen, int nFlag, int64_t timestamp, int nIsKeyFrame);$/;"	t	file:
DbgReportLog	dbg.c	/^void DbgReportLog( int stream, int streamType, char *reason )$/;"	f
DbgSendFileName	socket_logging.c	/^void DbgSendFileName( char *logfile )$/;"	f
DbgTraceTimeStamp	dbg.c	/^void DbgTraceTimeStamp( int type, double _dTimeStamp, int stream )$/;"	f
DemoCmd	socket_logging.h	/^} DemoCmd;$/;"	t	typeref:struct:__anon2
Dequeue	queue.c	/^static int Dequeue( Queue *q, void *data, int *outSize )$/;"	f	file:
Element	queue.h	/^typedef struct Element {$/;"	s
Element	queue.h	/^} Element;$/;"	t	typeref:struct:Element
Enqueue	queue.c	/^static int Enqueue( Queue *q, void *data, int size )$/;"	f	file:
FRAME_DATA_LEN	main.h	/^#define FRAME_DATA_LEN /;"	d
Frame	main.h	/^} Frame;$/;"	t	typeref:struct:__anon4
G711_TIMESTAMP_INTERVAL	main.h	/^#define G711_TIMESTAMP_INTERVAL /;"	d
GRAY	dbg.h	/^#define GRAY /;"	d
GREEN	dbg.h	/^#define GREEN /;"	d
GetCaptureDevice	dev_core.c	/^CaptureDevice *GetCaptureDevice()$/;"	f
GetCurrentTime	socket_logging.c	/^int GetCurrentTime( char *now_time )$/;"	f
GetTimeDiff	socket_logging.c	/^int GetTimeDiff( struct timeval *_pStartTime, struct timeval *_pEndTime )$/;"	f
HEVCNALUnitType	sim_dev.c	/^enum HEVCNALUnitType {$/;"	g	file:
HEVC_B	sim_dev.c	/^        HEVC_B =2$/;"	e	enum:HevcType	file:
HEVC_I	sim_dev.c	/^        HEVC_I = 1,$/;"	e	enum:HevcType	file:
HEVC_META	sim_dev.c	/^        HEVC_META = 0,$/;"	e	enum:HevcType	file:
HEVC_NAL_AUD	sim_dev.c	/^        HEVC_NAL_AUD        = 35,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_BLA_N_LP	sim_dev.c	/^        HEVC_NAL_BLA_N_LP   = 18,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_BLA_W_LP	sim_dev.c	/^        HEVC_NAL_BLA_W_LP   = 16,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_BLA_W_RADL	sim_dev.c	/^        HEVC_NAL_BLA_W_RADL = 17,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_CRA_NUT	sim_dev.c	/^        HEVC_NAL_CRA_NUT    = 21,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_EOB_NUT	sim_dev.c	/^        HEVC_NAL_EOB_NUT    = 37,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_EOS_NUT	sim_dev.c	/^        HEVC_NAL_EOS_NUT    = 36,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_FD_NUT	sim_dev.c	/^        HEVC_NAL_FD_NUT     = 38,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_IDR_N_LP	sim_dev.c	/^        HEVC_NAL_IDR_N_LP   = 20,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_IDR_W_RADL	sim_dev.c	/^        HEVC_NAL_IDR_W_RADL = 19,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_IRAP_VCL22	sim_dev.c	/^        HEVC_NAL_IRAP_VCL22 = 22,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_IRAP_VCL23	sim_dev.c	/^        HEVC_NAL_IRAP_VCL23 = 23,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_PPS	sim_dev.c	/^        HEVC_NAL_PPS        = 34,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_RADL_N	sim_dev.c	/^        HEVC_NAL_RADL_N     = 6,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_RADL_R	sim_dev.c	/^        HEVC_NAL_RADL_R     = 7,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_RASL_N	sim_dev.c	/^        HEVC_NAL_RASL_N     = 8,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_RASL_R	sim_dev.c	/^        HEVC_NAL_RASL_R     = 9,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_RSV_VCL24	sim_dev.c	/^        HEVC_NAL_RSV_VCL24  = 24,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_RSV_VCL25	sim_dev.c	/^        HEVC_NAL_RSV_VCL25  = 25,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_RSV_VCL26	sim_dev.c	/^        HEVC_NAL_RSV_VCL26  = 26,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_RSV_VCL27	sim_dev.c	/^        HEVC_NAL_RSV_VCL27  = 27,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_RSV_VCL28	sim_dev.c	/^        HEVC_NAL_RSV_VCL28  = 28,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_RSV_VCL29	sim_dev.c	/^        HEVC_NAL_RSV_VCL29  = 29,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_RSV_VCL30	sim_dev.c	/^        HEVC_NAL_RSV_VCL30  = 30,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_RSV_VCL31	sim_dev.c	/^        HEVC_NAL_RSV_VCL31  = 31,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_SEI_PREFIX	sim_dev.c	/^        HEVC_NAL_SEI_PREFIX = 39,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_SEI_SUFFIX	sim_dev.c	/^        HEVC_NAL_SEI_SUFFIX = 40,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_SPS	sim_dev.c	/^        HEVC_NAL_SPS        = 33,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_STSA_N	sim_dev.c	/^        HEVC_NAL_STSA_N     = 4,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_STSA_R	sim_dev.c	/^        HEVC_NAL_STSA_R     = 5,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_TRAIL_N	sim_dev.c	/^        HEVC_NAL_TRAIL_N    = 0,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_TRAIL_R	sim_dev.c	/^        HEVC_NAL_TRAIL_R    = 1,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_TSA_N	sim_dev.c	/^        HEVC_NAL_TSA_N      = 2,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_TSA_R	sim_dev.c	/^        HEVC_NAL_TSA_R      = 3,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_VCL_N10	sim_dev.c	/^        HEVC_NAL_VCL_N10    = 10,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_VCL_N12	sim_dev.c	/^        HEVC_NAL_VCL_N12    = 12,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_VCL_N14	sim_dev.c	/^        HEVC_NAL_VCL_N14    = 14,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_VCL_R11	sim_dev.c	/^        HEVC_NAL_VCL_R11    = 11,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_VCL_R13	sim_dev.c	/^        HEVC_NAL_VCL_R13    = 13,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_VCL_R15	sim_dev.c	/^        HEVC_NAL_VCL_R15    = 15,$/;"	e	enum:HEVCNALUnitType	file:
HEVC_NAL_VPS	sim_dev.c	/^        HEVC_NAL_VPS        = 32,$/;"	e	enum:HEVCNALUnitType	file:
HIDE	dbg.h	/^#define HIDE /;"	d
HevcType	sim_dev.c	/^enum HevcType {$/;"	g	file:
IPC_TEST_H	main.h	/^#define IPC_TEST_H$/;"	d
IPC_TRACE_TIMESTAMP	main.h	/^#define IPC_TRACE_TIMESTAMP /;"	d
InitConfig	cfg.c	/^void InitConfig()$/;"	f
IsTestAACWithoutAdts	sim_dev.c	/^        unsigned char IsTestAACWithoutAdts;$/;"	m	struct:__anon10	file:
JpegInfo	stream.h	/^} JpegInfo;$/;"	t	typeref:struct:__anon13
LOG	dbg.h	/^#define LOG(/;"	d
LOG2FILE_H	log2file.h	/^#define LOG2FILE_H$/;"	d
L_BLACK	dbg.h	/^#define L_BLACK /;"	d
L_BLUE	dbg.h	/^#define L_BLUE /;"	d
L_CYAN	dbg.h	/^#define L_CYAN /;"	d
L_GREEN	dbg.h	/^#define L_GREEN /;"	d
L_PURPLE	dbg.h	/^#define L_PURPLE /;"	d
L_RED	dbg.h	/^#define L_RED /;"	d
LoadConfig	cfg.c	/^void LoadConfig()$/;"	f
Logger	dbg.h	/^} Logger;$/;"	t	typeref:struct:__anon23
LoggerInit	dbg.c	/^int LoggerInit( unsigned printTime, int output, char *pLogFile, int logVerbose )$/;"	f
MYMALLOC_H	mymalloc.h	/^#define MYMALLOC_H$/;"	d
NONE	dbg.h	/^#define NONE /;"	d
NewCoreDevice	dev_core.c	/^CoreDevice * NewCoreDevice()$/;"	f
NewQueue	queue.c	/^Queue* NewQueue()$/;"	f
OUTPUT_CONSOLE	dbg.h	/^    OUTPUT_CONSOLE,$/;"	e	enum:__anon21
OUTPUT_FILE	dbg.h	/^    OUTPUT_FILE,$/;"	e	enum:__anon21
OUTPUT_MQTT	dbg.h	/^    OUTPUT_MQTT,$/;"	e	enum:__anon21
OUTPUT_NONE	dbg.h	/^    OUTPUT_NONE,$/;"	e	enum:__anon21
OUTPUT_SOCKET	dbg.h	/^    OUTPUT_SOCKET,$/;"	e	enum:__anon21
OutputType	dbg.h	/^} OutputType;$/;"	t	typeref:enum:__anon21
PURPLE	dbg.h	/^#define PURPLE /;"	d
QUEUE_H	queue.h	/^#define QUEUE_H$/;"	d
Queue	queue.h	/^typedef struct Queue {$/;"	s
Queue	queue.h	/^} Queue;$/;"	t	typeref:struct:Queue
QueueSize	queue.c	/^static int QueueSize( Queue *q )$/;"	f	file:
RED	dbg.h	/^#define RED /;"	d
REVERSE	dbg.h	/^#define REVERSE /;"	d
SIM_DEV_JPEG_CAPTURED	sim_dev.c	/^    SIM_DEV_JPEG_CAPTURED,$/;"	e	enum:__anon9	file:
SIM_DEV_MOTION_DETECT	sim_dev.c	/^    SIM_DEV_MOTION_DETECT,$/;"	e	enum:__anon9	file:
SIM_DEV_MOTION_DETECT_DISAPPEAR	sim_dev.c	/^    SIM_DEV_MOTION_DETECT_DISAPPEAR,$/;"	e	enum:__anon9	file:
SOCKET_LOGGING_H	socket_logging.h	/^#define SOCKET_LOGGING_H$/;"	d
STREAM_CACHE_SIZE	main.h	/^#define STREAM_CACHE_SIZE /;"	d
STREAM_H	stream.h	/^#define STREAM_H$/;"	d
STREAM_MAIN	dev_core.h	/^    STREAM_MAIN,$/;"	e	enum:__anon15
STREAM_MAX	dev_core.h	/^    STREAM_MAX,$/;"	e	enum:__anon15
STREAM_SUB	dev_core.h	/^    STREAM_SUB,$/;"	e	enum:__anon15
SdkLogCallback	dbg.c	/^void SdkLogCallback(int nLogLevel, char *log )$/;"	f
SimDevAlarmCallback	sim_dev.c	/^int SimDevAlarmCallback(alarm_t _alarm, void *pcontext)$/;"	f
SimDevAudioGetFrameCb	sim_dev.c	/^static int SimDevAudioGetFrameCb( char *_pFrame, int _nLen, double _dTimeStamp,$/;"	f	file:
SimDevCaptureJpeg	sim_dev.c	/^static int SimDevCaptureJpeg( int stream, int quality, char *path, char *filename)$/;"	f	file:
SimDevDeInitIPC	sim_dev.c	/^static int SimDevDeInitIPC()$/;"	f	file:
SimDevGetDevId	sim_dev.c	/^static int SimDevGetDevId( char *devId )$/;"	f	file:
SimDevInitIPC	sim_dev.c	/^static int SimDevInitIPC( int audioType, int subStreamEnable, VideoFrameCb videoCb, AudioFrameCb audioCb )$/;"	f	file:
SimDevIsAudioEnable	sim_dev.c	/^static int SimDevIsAudioEnable()$/;"	f	file:
SimDevRegisterAlarmCb	sim_dev.c	/^static int SimDevRegisterAlarmCb( int (*alarmCallback)(int alarm, void *data ) )$/;"	f	file:
SimDevStartStream	sim_dev.c	/^int SimDevStartStream()$/;"	f
SimDevVideoGetFrameCb	sim_dev.c	/^static int SimDevVideoGetFrameCb( int streamno, char *_pFrame,$/;"	f	file:
SimpleSshTask	socket_logging.c	/^void *SimpleSshTask( void *param )$/;"	f
SocketLoggingTask	socket_logging.c	/^void *SocketLoggingTask( void *param )$/;"	f
StartConfigUpdateTask	main.c	/^void StartConfigUpdateTask()$/;"	f
StartSocketDbgTask	socket_logging.c	/^void StartSocketDbgTask()$/;"	f
StartTokenUpdateTask	main.c	/^int StartTokenUpdateTask()$/;"	f
Stream	main.h	/^} Stream;$/;"	t	typeref:struct:__anon5
Stream	sim_dev.c	/^}Stream;$/;"	t	typeref:struct:__anon10	file:
StreamChannel	dev_core.h	/^} StreamChannel;$/;"	t	typeref:enum:__anon15
StreamCommonHandle	stream.c	/^int StreamCommonHandle( int _nStreamType, int _nStream, char *_pFrame, int _nLen, int _nIskey,$/;"	f
StreamType	stream.h	/^} StreamType;$/;"	t	typeref:enum:__anon12
THIS_IS_AUDIO	sim_dev.c	/^#define THIS_IS_AUDIO /;"	d	file:
THIS_IS_VIDEO	sim_dev.c	/^#define THIS_IS_VIDEO /;"	d	file:
TIMESTAMP_REPORT_INTERVAL	main.h	/^#define TIMESTAMP_REPORT_INTERVAL /;"	d
TOKEN_LENGTH	main.h	/^#define TOKEN_LENGTH /;"	d
TOKEN_RETRY_COUNT	main.h	/^#define TOKEN_RETRY_COUNT /;"	d
TYPE_AUDIO	stream.h	/^    TYPE_AUDIO,$/;"	e	enum:__anon12
TYPE_VIDEO	stream.h	/^    TYPE_VIDEO,$/;"	e	enum:__anon12
TsUploaderSdkDeInit	main.c	/^int TsUploaderSdkDeInit()$/;"	f
TsUploaderSdkInit	main.c	/^int TsUploaderSdkInit()$/;"	f
UNDERLINE	dbg.h	/^#define UNDERLINE /;"	d
UPDATE_FROM_FILE	main.h	/^    UPDATE_FROM_FILE,$/;"	e	enum:__anon3
UPDATE_FROM_SOCKET	main.h	/^    UPDATE_FROM_SOCKET,$/;"	e	enum:__anon3
UpadateToken	main.c	/^static void * UpadateToken() {$/;"	f	file:
UpdateConfig	cfg.c	/^void UpdateConfig()$/;"	f
UpdateType	main.h	/^} UpdateType;$/;"	t	typeref:enum:__anon3
VERSION	sim_dev.c	/^#define VERSION /;"	d	file:
VideoCaptureTask	sim_dev.c	/^void *VideoCaptureTask( void *param )$/;"	f
VideoFrameCb	dev_core.h	/^typedef int (*VideoFrameCb) ( char *_pFrame, $/;"	t
VideoGetFrameCb	stream.c	/^int VideoGetFrameCb( char *_pFrame,$/;"	f
WHITE	dbg.h	/^#define WHITE /;"	d
WaitForNetworkOk	main.c	/^int WaitForNetworkOk()$/;"	f
YELLOW	dbg.h	/^#define YELLOW /;"	d
aacfreq	sim_dev.c	/^static int aacfreq[13] = {96000, 88200,64000,48000,44100,32000,24000, 22050 , 16000 ,12000,11025,8000,7350};$/;"	v	file:
ak	cfg.h	/^    char *ak;$/;"	m	struct:__anon20
alarmCallback	dev_core.h	/^    int (*alarmCallback)(int alarm, void *data );$/;"	m	struct:__anon17
alarm_callback_t	sim_dev.c	/^typedef int (*alarm_callback_t)(alarm_t alarm, void *pcontext);$/;"	t	file:
alarm_t	sim_dev.c	/^} alarm_t;$/;"	t	typeref:struct:__anon7	file:
audioCache	main.h	/^    Queue *audioCache;$/;"	m	struct:__anon5
audioCb	dev_core.h	/^    AudioFrameCb audioCb;$/;"	m	struct:__anon17
audioCb	sim_dev.c	/^        audio_callback_t audioCb;$/;"	m	struct:__anon10	file:
audioEnable	dev_core.h	/^    int audioEnable;$/;"	m	struct:__anon17
audioStreams	sim_dev.c	/^        Stream audioStreams[2];$/;"	m	struct:__anon11	file:
audioType	dev_core.h	/^    int audioType;$/;"	m	struct:__anon17
audioType	main.h	/^    unsigned char audioType;$/;"	m	struct:__anon6
audio_callback_t	sim_dev.c	/^typedef int (*audio_callback_t)(char *frame, int len, double timestatmp, unsigned long frame_index, void *pcontext);$/;"	t	file:
audio_type_t	sim_dev.c	/^} audio_type_t;$/;"	t	typeref:enum:__anon8	file:
bucketName	cfg.h	/^    char *bucketName;$/;"	m	struct:__anon20
cacheSize	cfg.h	/^    int cacheSize;$/;"	m	struct:__anon20
cameras	sim_dev.c	/^Camera cameras[10];$/;"	v
captureJpeg	dev_core.h	/^    int (*captureJpeg)( int stream, int quality, char *path, char *filename);$/;"	m	struct:__anon17
captureJpeg	dev_core.h	/^    int (*captureJpeg)( int stream, int quality, char *path, char *filename);$/;"	m	struct:__anon18
cfg	main.h	/^    struct cfg_struct *cfg;$/;"	m	struct:__anon6	typeref:struct:__anon6::cfg_struct
cfg_delete	cfg.c	/^void cfg_delete(struct cfg_struct *cfg, const char *key)$/;"	f
cfg_dump	cfg.c	/^void cfg_dump(struct cfg_struct *cfg)$/;"	f
cfg_free	cfg.c	/^void cfg_free(struct cfg_struct *cfg)$/;"	f
cfg_get	cfg.c	/^char * cfg_get(struct cfg_struct *cfg, const char *key)$/;"	f
cfg_init	cfg.c	/^struct cfg_struct * cfg_init()$/;"	f
cfg_items	cfg.c	/^static CfgItem cfg_items[] =$/;"	v	file:
cfg_load	cfg.c	/^int cfg_load(struct cfg_struct *cfg, const char *filename)$/;"	f
cfg_malloc	cfg.c	/^static void *cfg_malloc(unsigned int size)$/;"	f	file:
cfg_node	cfg.c	/^struct cfg_node$/;"	s	file:
cfg_save	cfg.c	/^int cfg_save(struct cfg_struct *cfg, const char *filename)$/;"	f
cfg_set	cfg.c	/^void cfg_set(struct cfg_struct *cfg, const char *key, const char *value)$/;"	f
cfg_struct	cfg.c	/^struct cfg_struct$/;"	s	file:
cfg_trim	cfg.c	/^static char *cfg_trim(const char *str)$/;"	f	file:
cmd	socket_logging.h	/^    char *cmd;$/;"	m	struct:__anon2
code	sim_dev.c	/^    int code;$/;"	m	struct:__anon7	file:
cond	queue.h	/^    pthread_cond_t      cond;$/;"	m	struct:Queue
config	main.h	/^    Config config;$/;"	m	struct:__anon6
configUpdateInterval	cfg.h	/^    int configUpdateInterval;$/;"	m	struct:__anon20
connecting	socket_logging.h	/^    int connecting;$/;"	m	struct:__anon1
data	main.h	/^    char *data;$/;"	m	struct:__anon4
data	queue.h	/^    void *data;$/;"	m	struct:Element
data	sim_dev.c	/^    char data[128];$/;"	m	struct:__anon7	file:
dataCallback	sim_dev.c	/^static int dataCallback(void *opaque, void *pData, int nDataLen, int nFlag, int64_t timestamp, int nIsKeyFrame)$/;"	f	file:
dbg	dbg.c	/^int dbg( unsigned logLevel, const char *file, const char *function, int line, const char *format, ...  )$/;"	f
deInit	dev_core.h	/^    int (*deInit)();$/;"	m	struct:__anon17
deInit	dev_core.h	/^    int (*deInit)();$/;"	m	struct:__anon18
dequeue	queue.h	/^    int (*dequeue)( struct Queue *q, void *data, int *outSize );$/;"	m	struct:Queue
detectMoving	main.h	/^    unsigned char detectMoving;$/;"	m	struct:__anon6
dev	main.h	/^    CoreDevice *dev;$/;"	m	struct:__anon6
devId	main.h	/^    char devId[DEV_ID_LEN];$/;"	m	struct:__anon5
devId	main.h	/^    char devId[DEV_ID_LEN];$/;"	m	struct:__anon6
down	mymalloc.c	/^static int up = 0, down = 0;$/;"	v	file:
enqueue	queue.h	/^    int (*enqueue)( struct Queue *q, void *data, int size );$/;"	m	struct:Queue
file	sim_dev.c	/^        char file[256];$/;"	m	struct:__anon10	file:
fileOpen	log2file.c	/^int fileOpen( char *_pLogFile )$/;"	f
fix	sim_dev.c	/^        LinkADTSFixheader fix;$/;"	m	struct:ADTS	file:
flag	sim_dev.c	/^    int flag;$/;"	m	struct:__anon7	file:
free	mymalloc.h	/^#define free(/;"	d
gAJCaptureDev	aj_dev.c	/^CaptureDevice gAJCaptureDev =$/;"	v
gAJCaptureDev	aj_dev.c	/^CaptureDevice gAJCaptureDev;$/;"	v
gCmds	socket_logging.c	/^static DemoCmd gCmds[] =$/;"	v	file:
gCoreDevice	dev_core.c	/^static CoreDevice gCoreDevice, *pCoreDevice = &gCoreDevice;$/;"	v	file:
gFd	log2file.c	/^static FILE *gFd = NULL;$/;"	v	file:
gIpc	main.c	/^App gIpc;$/;"	v
gLogQueue	socket_logging.c	/^static Queue *gLogQueue;$/;"	v	file:
gLogger	dbg.c	/^static Logger gLogger;$/;"	v	file:
gSimDevCaptureDev	sim_dev.c	/^CaptureDevice gSimDevCaptureDev =$/;"	v
gSimDevCaptureDev	sim_dev.c	/^CaptureDevice gSimDevCaptureDev;$/;"	v
gStatus	socket_logging.c	/^static socket_status gStatus;$/;"	v	file:
getCurrentMilliSecond	sim_dev.c	/^static inline int64_t getCurrentMilliSecond(){$/;"	f	file:
getDevId	dev_core.h	/^    int (*getDevId)( char *devId );$/;"	m	struct:__anon17
getDevId	dev_core.h	/^    int (*getDevId)( char *devId );$/;"	m	struct:__anon18
getFileAndLength	sim_dev.c	/^static int getFileAndLength(char *_pFname, FILE **_pFile, int *_pLen)$/;"	f	file:
getPicCallback	main.c	/^static enum LinkGetPictureSyncMode getPicCallback ( void *pOpaque, void *pSvaeWhenAsync, $/;"	f	file:
getPictureFreeCallback	main.c	/^static int getPictureFreeCallback (char *pBuf, int nNameBufSize) $/;"	f	file:
getSize	queue.h	/^    int (*getSize)( struct Queue *q );$/;"	m	struct:Queue
gsock	socket_logging.c	/^int gsock = 0;$/;"	v
h264Aud3	sim_dev.c	/^char h264Aud3[3]={0, 0, 1};$/;"	v
head	cfg.c	/^  struct cfg_node *head;$/;"	m	struct:cfg_struct	typeref:struct:cfg_struct::cfg_node	file:
heartBeatInterval	cfg.h	/^    unsigned char heartBeatInterval;$/;"	m	struct:__anon20
init	dev_core.h	/^    int (*init)( int audioType, int subStreamEnable, VideoFrameCb videoCb, AudioFrameCb audioCb );$/;"	m	struct:__anon17
init	dev_core.h	/^    int (*init)( int audioType, int subStreamEnablek, VideoFrameCb videoCb, AudioFrameCb audioCb );$/;"	m	struct:__anon18
isAac	sim_dev.c	/^        unsigned char isAac;$/;"	m	struct:__anon10	file:
isAudio	sim_dev.c	/^        unsigned char isAudio;$/;"	m	struct:__anon10	file:
isAudioEnable	dev_core.h	/^    int (*isAudioEnable)();$/;"	m	struct:__anon17
isAudioEnable	dev_core.h	/^    int (*isAudioEnable)();$/;"	m	struct:__anon18
isH265	sim_dev.c	/^        unsigned char isH265;$/;"	m	struct:__anon10	file:
isKey	main.h	/^    unsigned char isKey;$/;"	m	struct:__anon4
isStop	sim_dev.c	/^        unsigned char isStop;$/;"	m	struct:__anon10	file:
isStr	cfg.h	/^    int isStr;$/;"	m	struct:__anon19
is_h265_picture	sim_dev.c	/^static int is_h265_picture(int t)$/;"	f	file:
item	cfg.h	/^    void *item; $/;"	m	struct:__anon19
jpegQ	main.h	/^    Queue *jpegQ;$/;"	m	struct:__anon5
key	cfg.c	/^  char *key;$/;"	m	struct:cfg_node	file:
len	main.h	/^    int len;$/;"	m	struct:__anon4
level	sim_dev.c	/^    int level;$/;"	m	struct:__anon7	file:
localfile	stream.h	/^    char localfile[512];$/;"	m	struct:__anon13
logFile	cfg.h	/^    char *logFile;$/;"	m	struct:__anon20
logFile	dbg.h	/^    char *logFile;$/;"	m	struct:__anon23
logLevel	dbg.h	/^    unsigned logLevel;$/;"	m	struct:__anon23
logOutput	cfg.h	/^    unsigned char logOutput;$/;"	m	struct:__anon20
logPrintTime	cfg.h	/^    unsigned char logPrintTime;$/;"	m	struct:__anon20
logStop	socket_logging.h	/^    int logStop;$/;"	m	struct:__anon1
logVerbose	cfg.h	/^    unsigned char logVerbose;$/;"	m	struct:__anon20
logVerbose	dbg.h	/^    int logVerbose;$/;"	m	struct:__anon23
log_send	socket_logging.c	/^int log_send( char *message )$/;"	f
main	main.c	/^int main()$/;"	f
mainContext	dev_core.h	/^    int mainContext;$/;"	m	struct:__anon17
malloc	mymalloc.h	/^#define malloc(/;"	d
motion_detec_s	sim_dev.c	/^} motion_detec_s;$/;"	v	typeref:enum:__anon9
movingDetection	cfg.h	/^    unsigned char movingDetection;$/;"	m	struct:__anon20
multiChannel	cfg.h	/^    unsigned char multiChannel;$/;"	m	struct:__anon20
mutex	queue.h	/^    pthread_mutex_t     mutex;$/;"	m	struct:Queue
myfree	mymalloc.c	/^void myfree( void *ptr, char *function, int line )$/;"	f
mymalloc	mymalloc.c	/^void *mymalloc( size_t size, char *function, int line )$/;"	f
nId	sim_dev.c	/^        int nId;$/;"	m	struct:__anon11	file:
nRolloverTestBase	sim_dev.c	/^        int64_t nRolloverTestBase;$/;"	m	struct:__anon10	file:
nStreamNo	sim_dev.c	/^        int nStreamNo;$/;"	m	struct:__anon10	file:
next	cfg.c	/^  struct cfg_node *next;$/;"	m	struct:cfg_node	typeref:struct:cfg_node::cfg_node	file:
next	queue.h	/^    struct Element *next;$/;"	m	struct:Element	typeref:struct:Element::Element
openCache	cfg.h	/^    unsigned char openCache;$/;"	m	struct:__anon20
output	dbg.h	/^    int output;$/;"	m	struct:__anon23
pCaptureDevice	dev_core.h	/^    CaptureDevice *pCaptureDevice;$/;"	m	struct:__anon18
pCmdHandle	socket_logging.h	/^    void (*pCmdHandle)(char *param);$/;"	m	struct:__anon2
pCoreDevice	dev_core.c	/^static CoreDevice gCoreDevice, *pCoreDevice = &gCoreDevice;$/;"	v	file:
pIn	queue.h	/^    Element             *pIn;$/;"	m	struct:Queue
pLast	queue.h	/^    Element             *pLast;$/;"	m	struct:Queue
pOpaque	main.h	/^    void *pOpaque;$/;"	m	struct:__anon5
pOut	queue.h	/^    Element             *pOut;$/;"	m	struct:Queue
printTime	dbg.h	/^    int printTime;$/;"	m	struct:__anon23
readFileToBuf	sim_dev.c	/^static int readFileToBuf(char * _pFilename, char ** _pBuf, int *_pLen)$/;"	f	file:
registerAlarmCb	dev_core.h	/^    int (*registerAlarmCb)( int (*alarmCb)( int alarm, void *data ) );$/;"	m	struct:__anon17
registerAlarmCb	dev_core.h	/^    int (*registerAlarmCb)( int (*alarmCb)( int alarm, void *data ) );$/;"	m	struct:__anon18
renameTokenUrl	cfg.h	/^    char *renameTokenUrl;$/;"	m	struct:__anon20
reportStatus	socket_logging.c	/^int reportStatus( int code, char *_pFileName )$/;"	f
retry_count	socket_logging.h	/^    int retry_count;$/;"	m	struct:__anon1
save	cfg.h	/^    char **save;$/;"	m	struct:__anon19
serverIp	cfg.h	/^    char *serverIp;$/;"	m	struct:__anon20
serverPort	cfg.h	/^    int serverPort;$/;"	m	struct:__anon20
simdev_init	sim_dev.c	/^int simdev_init( )$/;"	f
simdev_register_callback	sim_dev.c	/^int simdev_register_callback(alarm_callback_t alarmcb , void *pcontext)$/;"	f
simdev_set_audio_filepath	sim_dev.c	/^void simdev_set_audio_filepath(int camera, int stream, char *pFile, int nFileLen)$/;"	f
simdev_set_audio_format	sim_dev.c	/^void simdev_set_audio_format(int camera, int stream, int isAac)$/;"	f
simdev_set_video_filepath	sim_dev.c	/^void simdev_set_video_filepath(int camera, int stream, char *pFile, int nFileLen)$/;"	f
simdev_set_video_format	sim_dev.c	/^void simdev_set_video_format(int camera, int stream, int isH265)$/;"	f
simdev_start_audio	sim_dev.c	/^int simdev_start_audio(int camera, int stream, audio_callback_t acb, void *pcontext)$/;"	f
simdev_start_video	sim_dev.c	/^int simdev_start_video(int camera, int stream, video_callback_t vcb, void *pcontext)$/;"	f
simdev_stop_audio	sim_dev.c	/^int simdev_stop_audio(int camera, int stream)$/;"	f
simdev_stop_audio_play	sim_dev.c	/^int simdev_stop_audio_play(void)$/;"	f
simdev_stop_video	sim_dev.c	/^int simdev_stop_video(int camera, int stream)$/;"	f
simpleSshEnable	cfg.h	/^    unsigned char simpleSshEnable;$/;"	m	struct:__anon20
size	queue.h	/^    int                 size;$/;"	m	struct:Queue
size	queue.h	/^    int size;$/;"	m	struct:Element
sk	cfg.h	/^    char *sk;$/;"	m	struct:__anon20
socket_init	socket_logging.c	/^int socket_init()$/;"	f
socket_status	socket_logging.h	/^} socket_status;$/;"	t	typeref:struct:__anon1
startStream	dev_core.h	/^    int (*startStream)( int streamType );$/;"	m	struct:__anon18
startStream	dev_core.h	/^    int (*startStream)();$/;"	m	struct:__anon17
start_audio_file_test	sim_dev.c	/^int start_audio_file_test(void *opaque)$/;"	f
start_video_file_test	sim_dev.c	/^int start_video_file_test(void *opaque)$/;"	f
stream	main.h	/^    Stream stream[STREAM_MAX];$/;"	m	struct:__anon6
subContext	dev_core.h	/^    int subContext;$/;"	m	struct:__anon17
subStreamEnable	dev_core.h	/^    int subStreamEnable;$/;"	m	struct:__anon17
tid	sim_dev.c	/^        pthread_t tid;$/;"	m	struct:__anon10	file:
timeStamp	main.h	/^    double timeStamp;$/;"	m	struct:__anon4
timeStampPrintInterval	cfg.h	/^    int timeStampPrintInterval;$/;"	m	struct:__anon20
token	main.h	/^    char token[TOKEN_LENGTH];$/;"	m	struct:__anon5
tokenRetryCount	cfg.h	/^    int tokenRetryCount;$/;"	m	struct:__anon20
tokenUploadInterval	cfg.h	/^    int tokenUploadInterval;$/;"	m	struct:__anon20
tokenUrl	cfg.h	/^    char *tokenUrl;$/;"	m	struct:__anon20
up	mymalloc.c	/^static int up = 0, down = 0;$/;"	v	file:
updateFrom	cfg.h	/^    unsigned char updateFrom;$/;"	m	struct:__anon20
uploadName	stream.h	/^    char uploadName[1024];$/;"	m	struct:__anon13
uploader	main.h	/^    LinkTsMuxUploader *uploader;$/;"	m	struct:__anon5
url	cfg.h	/^    char *url;$/;"	m	struct:__anon20
useLocalToken	cfg.h	/^    unsigned char useLocalToken;$/;"	m	struct:__anon20
value	cfg.c	/^  char *value;$/;"	m	struct:cfg_node	file:
var	sim_dev.c	/^        LinkADTSVariableHeader var;$/;"	m	struct:ADTS	file:
version	main.h	/^    char *version;$/;"	m	struct:__anon6
videoCache	main.h	/^    Queue *videoCache;$/;"	m	struct:__anon5
videoCb	dev_core.h	/^    VideoFrameCb videoCb;$/;"	m	struct:__anon17
videoCb	sim_dev.c	/^        video_callback_t videoCb;$/;"	m	struct:__anon10	file:
videoStreams	sim_dev.c	/^        Stream videoStreams[2];$/;"	m	struct:__anon11	file:
video_callback_t	sim_dev.c	/^typedef int (*video_callback_t)(int streamno, char *frame, int len, int iskey, double timestatmp, unsigned long frame_index,$/;"	t	file:
writeLog	log2file.c	/^int writeLog( char *log )$/;"	f
